plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.21'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'jacoco'
    id 'org.kordamp.gradle.markdown' version '2.2.0'
}

group 'org.tonybaloney.security'
version '1.22.1'

def ktor_version = "1.3.2"
def kotlin_version = "1.4.10"

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

dependencies {
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.2'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "net.bytebuddy:byte-buddy:1.10.14"
    testImplementation "net.bytebuddy:byte-buddy-agent:1.10.14"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-client-core:$ktor_version"
    compile "io.ktor:ktor-client-apache:$ktor_version"
    compile "io.ktor:ktor-client-gson:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

test {
    useJUnitPlatform()
    dependsOn 'cleanTest'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    type 'PC'
    plugins 'python-ce', 'yaml'
    updateSinceUntilBuild false
}
// Make the intellij version overridable on the command line to support multiple build versions..
intellij.version = project.hasProperty('intellijVersion') ? project.getProperty('intellijVersion') : '2020.2'


patchPluginXml {
    changeNotes """
      <h2>1.22.1</h2>
      <ul>
        <li>Use 2020.2</li>
      </ul>
      """
}

publishPlugin {
    token intellijPublishToken
    // channels 'beta'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

markdownToHtml {
    sourceDir file("doc/checks/")
    outputDir file("src/main/resources/docs")
    fencedCodeBlocks true
}