plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.13.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
    id 'jacoco'
    id 'org.kordamp.gradle.markdown' version '2.2.0'
}

group 'org.tonybaloney.security'
version '1.27.0'

def ktor_version = "2.2.3"

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

dependencies {
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    testImplementation 'net.bytebuddy:byte-buddy:1.12.23'
    testImplementation 'net.bytebuddy:byte-buddy-agent:1.12.23'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.9.1'
    // HAck to get build working. Try removing in future
    testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.9.1'

    // For API clients
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-serialization-gson:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
}

test {
    useJUnitPlatform()
    dependsOn 'cleanTest'
}

intellij {
    type = 'PC'
    plugins = ['python-ce', 'yaml']
    updateSinceUntilBuild = false
    version = '2022.3'
}

patchPluginXml {
    changeNotes = """
      <h2>1.27.0</h2>
      <ul>
        <li>Support for 2022.3</li>
        <li>"Bundled" package check setting will a live database PyUP.IO's public API. This API is meant for non-commercial projects only, so a message is shown.
 If you're scanning commercial projects, please use the PyPI API in the settings or register for an account with PyUP.io and enter your API key in settings </li>
        <li>Updated to Java 17</li>
        <li>Updated to newer KTor API client</li>
      </ul>
      """
}

publishPlugin {
    token = intellijPublishToken
    // channels 'beta'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

markdownToHtml {
    sourceDir file("doc/checks/")
    outputDir file("src/main/resources/docs")
    fencedCodeBlocks true
}
